apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: policystrictonly
spec:
  crd:
    spec:
      names:
        kind: PolicyStrictOnly
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package policystrictonly

        # VIOLATION spec.peers does not exist
        violation[{"msg": msg}] {
          p := input.review.object
          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"
          not p.spec["peers"]

          msg := "spec.peers does not exist"
        }

        # VIOLATION spec.peers is []
        violation[{"msg": msg}] {
          p := input.review.object
          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"
          p.spec["peers"] == []

          msg := "spec.peers cannot be empty"
        }

        # VIOLATION peer authentication does not set mTLS correctly
        violation[{"msg": msg}] {
          p := input.review.object
          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"

          peer := p.spec.peers[_]
          # check for different valid configurations
          not peer.mtls.mode == "STRICT"
          not peer.mtls == {}
          not peer.mtls == null
          msg := "spec.peers does not include STRICT mTLS settings"
        }
