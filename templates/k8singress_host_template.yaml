apiVersion: templates.gatekeeper.sh/v1alpha1
kind: ConstraintTemplate
metadata:
  name: k8singresshost
spec:
  crd:
    spec:
      names:
        kind: K8sIngressHost
        listKind: K8sIngressHostList
        plural: k8singresshost
        singular: k8singresshost
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            message:
              type: string
            hosts:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8singresshost

        get_message(constraint, _default) = msg {
          not constraint.spec.parameters.message
          msg := _default
        }

        get_message(constraint, _default) = msg {
          msg := constraint.spec.parameters.message
        }

        violation[{"msg": msg}] {
          value := input.review.object.spec.rules[_].host
          expected := input.constraint.spec.parameters.hosts[_]
          # do not match if allowedRegex is not defined, or is an empty string
          expected != ""
          not re_match(expected, value)
          def_msg := sprintf("Ingress %v does not satisfy regex: %v", [value, expected])
          msg := get_message(input.constraint, def_msg)
        }
